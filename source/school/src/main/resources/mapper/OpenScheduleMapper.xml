<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.dao.OpenScheduleMapper">
  <resultMap id="BaseResultMap" type="com.school.entity.OpenSchedule">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="day" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="techer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="book_able_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="book_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="flag" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, day, start_time, end_time, course_name, techer_id, book_able_num, book_num, flag
  </sql>
  <select id="selectByExample" parameterType="com.school.dao.OpenScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from open_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from open_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from open_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.school.dao.OpenScheduleExample">
    delete from open_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.school.entity.OpenSchedule">
    insert into open_schedule (id, day, start_time, 
      end_time, course_name, techer_id, 
      book_able_num, book_num, flag
      )
    values (#{id,jdbcType=INTEGER}, #{day,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{courseName,jdbcType=VARCHAR}, #{techerId,jdbcType=INTEGER}, 
      #{bookAbleNum,jdbcType=INTEGER}, #{bookNum,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.school.entity.OpenSchedule">
    insert into open_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="techerId != null">
        techer_id,
      </if>
      <if test="bookAbleNum != null">
        book_able_num,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="techerId != null">
        #{techerId,jdbcType=INTEGER},
      </if>
      <if test="bookAbleNum != null">
        #{bookAbleNum,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.school.dao.OpenScheduleExample" resultType="java.lang.Long">
    select count(*) from open_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update open_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.techerId != null">
        techer_id = #{record.techerId,jdbcType=INTEGER},
      </if>
      <if test="record.bookAbleNum != null">
        book_able_num = #{record.bookAbleNum,jdbcType=INTEGER},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update open_schedule
    set id = #{record.id,jdbcType=INTEGER},
      day = #{record.day,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      techer_id = #{record.techerId,jdbcType=INTEGER},
      book_able_num = #{record.bookAbleNum,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.entity.OpenSchedule">
    update open_schedule
    <set>
      <if test="day != null">
        day = #{day,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="techerId != null">
        techer_id = #{techerId,jdbcType=INTEGER},
      </if>
      <if test="bookAbleNum != null">
        book_able_num = #{bookAbleNum,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.entity.OpenSchedule">
    update open_schedule
    set day = #{day,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      course_name = #{courseName,jdbcType=VARCHAR},
      techer_id = #{techerId,jdbcType=INTEGER},
      book_able_num = #{bookAbleNum,jdbcType=INTEGER},
      book_num = #{bookNum,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>